package models

import (
	_ "embed"

	"bytes"
	"context"
	"gorm.io/gorm"
	"encoding/csv"
	"github.com/muhwyndhamhp/pc-part-dataset/utils"
)

//go:embed {{.Filename}}
var {{.ModelName}}Csv []byte

type {{.ModelName}} struct {
	gorm.Model
	{{range .Fields}} {{.FieldNameProper}} {{.FieldType}} `json:"{{.FieldNameSnake}}" form:"{{.FieldNameSnake}}"`
	{{end}}
}

func ({{.ModelName}})TableName() string {
	return "{{.TableName}}"
}

func ({{.ModelName}})ImportData(db *gorm.DB) error {
	b := bytes.NewBuffer({{.ModelName}}Csv)
	r := csv.NewReader(b)

	records, err := r.ReadAll()
	if err != nil {
		return err
	}

	ctx := context.Background()
	rec := []*{{.ModelName}}{}
	for i := range records {
		if i == 0 {
				continue
		}

		m := {{.ModelName}}{
			{{range .Fields}}{{.FieldNameProper}}: {{.Statement}},
			{{end}}
		}

		rec = append(rec, &m)
	}

	if err := db.WithContext(ctx).CreateInBatches(rec, 1000).Error; err != nil {
		return err
	}

	return nil
}
